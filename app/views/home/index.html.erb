<div class="container container-center">
<div class="row">
  <div class=" col-lg-9 col-md-9 col-sm-9">
    <ul class="nav nav-tabs"> <!-- Tab for the Statistics and Game -->
      <li class="active"><a data-toggle="tab" href="#statistics">Statistics</a></li>
      <li><a href="#game" data-toggle="tab"> Game </a></li>        
    </ul> <!-- End tab -->

    <div class="tab-content">
      <div id="statistics" class="tab-pane fade in active">
        <% if(params.has_key?(:statistics)) %>
        <table class="table" id="stat_table">
          <tbody>
            <tr>
              <td> Total Games </td>
              <td> <%= params[:statistics].wins + params[:statistics].loses %> </td>
            </tr>
            <tr>
              <td> No of games won </td>
              <td> <%= params[:statistics].wins %> </td>
            </tr>
            <tr>
              <td> No of games lost </td>
              <td> <%= params[:statistics].loses %> </td>
            </tr>
          </tbody>
        </table>
        <% end %>
      </div>

      <div id="game" class="tab-pane fade" data-toggle="tab">
        <script src="/assets/chess.js"></script>
        <div id="board" style="width: 400px"></div>
        <p>Status: <span id="status"></span></p>
        <p>FEN: <span id="fen"></span></p>
        <p>PGN: <span id="pgn"></span></p>
      </div>
    </div>
  </div>

  <div class=" col-lg-3 col-md-3 col-sm-3">
    <div class="chat-box-div">
      <div class="chat-box-head">
        GROUP CHAT HISTORY
      </div>
      <div class="panel-body chat-box-main">
        <div id="message">
          <div class="chat-box-left">
            Welcome User.
          </div>
          <div class="chat-box-name-left">
            Admin, 24-April 2016
          </div>
          <hr class="hr-clas" />
        </div>
      </div>
            
      <div class="chat-box-footer">
        <div class="input-group">
          <input type="text" class="form-control" placeholder="Enter Text Here..." id="chatbox">
          <span class="input-group-btn">
            <button class="btn btn-info" type="button" id="send">SEND</button>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>                                   
 

<script>
    var board,
    game = new Chess(),
    statusEl = $('#status'),
    fenEl = $('#fen'),
    pgnEl = $('#pgn');

    // do not pick up pieces if the game is over
    // only pick up pieces for the side to move
    var onDragStart = function(source, piece, position, orientation) {
      if (game.game_over() === true ||
          (game.turn() === 'w' && piece.search(/^b/) !== -1) ||
          (game.turn() === 'b' && piece.search(/^w/) !== -1)) {
        return false;
      }
    };

    var onDrop = function(source, target) {
      // see if the move is legal
      var move = game.move({
        from: source,
        to: target,
        promotion: 'q' // NOTE: always promote to a queen for example simplicity
      });

      // illegal move
      if (move === null) return 'snapback';

      updateStatus();
    };

    // update the board position after the piece snap 
    // for castling, en passant, pawn promotion
    var onSnapEnd = function() {
      board.position(game.fen());
    };

    var updateStatus = function() {
      var status = '';

      var moveColor = 'White';
      if (game.turn() === 'b') {
        moveColor = 'Black';
      }

      // checkmate?
      if (game.in_checkmate() === true) {
        status = 'Game over, ' + moveColor + ' is in checkmate.';
      }

      // draw?
      else if (game.in_draw() === true) {
        status = 'Game over, drawn position';
      }

      // game still on
      else {
        status = moveColor + ' to move';

        // check?
        if (game.in_check() === true) {
          status += ', ' + moveColor + ' is in check';
        }
      }

      statusEl.html(status);
      fenEl.html(game.fen());
      pgnEl.html(game.pgn());
    };

    var cfg = {
      draggable: true,
      position: 'start',
      onDragStart: onDragStart,
      onDrop: onDrop,
      onSnapEnd: onSnapEnd
    };
    board = ChessBoard('board', cfg);
    //var board2 = ChessBoard('board2', cfg);

    updateStatus();
    
  </script>
